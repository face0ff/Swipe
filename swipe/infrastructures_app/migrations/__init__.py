# Generated by Django 4.2.1 on 2023-05-27 21:16

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('checkerboard_app', '0001_initial'),
        ('promotion_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view', models.CharField(choices=[('secondary', 'Вторичное жилье'), ('primary', 'Новострой'), ('cottage', 'Коттедж')], default='primary', verbose_name='Вид')),
                ('technology', models.CharField(choices=[('panel', 'Панельный'), ('monolith', 'Монолит')], default='panel', verbose_name='Технология')),
                ('status', models.CharField(choices=[('rented', 'Сдан'), ('vacant', 'Не сдан')], default='rented', verbose_name='Статус')),
                ('quantity', models.CharField(choices=[('1', '1-комнатная'), ('2', '2-комнатная'), ('3', '3-комнатная'), ('4', '4-комнатная')], default='1', verbose_name='Количество комнат')),
                ('appointment', models.CharField(choices=[('Residential', 'Жилая'), ('Commercial', 'Коммерческая'), ('Industrial', 'Промышленная')], default='Residential', verbose_name='Вид')),
                ('state', models.CharField(choices=[('need', 'Требует ремонта'), ('building', 'Ремонт от строителей')], default='building', verbose_name='Жилое состояние')),
                ('plane', models.CharField(choices=[('studio', 'Студия'), ('standart', 'Стандарт'), ('open', 'Свободная'), ('penthouse', 'Пентхаус')], default='open', verbose_name='Планировка')),
                ('area', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='Площадь')),
                ('kitchen_area', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='Площадь кухни')),
                ('balcony', models.CharField(choices=[('yes', 'Да'), ('not', 'Нет')], default='yes', verbose_name='Планировка')),
                ('heating', models.CharField(choices=[('electro', 'Электрическое'), ('gas', 'Газовое')], default='yes', verbose_name='Газ')),
                ('payment', models.CharField(blank=True, choices=[('cash', 'Наличные'), ('maternity', 'Мат. капитал'), ('mortgage', 'Ипотека'), ('military', 'Военная ипотека'), ('not', 'Неважно')], verbose_name='Варианты расчета')),
                ('commission', models.DecimalField(decimal_places=1, max_digits=10, verbose_name='Коммисия агенту')),
                ('communication', models.CharField(choices=[('call', 'Звонок'), ('message', 'Сообщение'), ('two', 'Звонок+Сообщение')], default='call', verbose_name='Способ связи')),
                ('apart_description', models.TextField(max_length=400, verbose_name='Описание')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('schema', models.ImageField(upload_to='img/schema/', verbose_name='Схема')),
                ('rejection', models.CharField(blank=True, choices=[('foto', 'Фото'), ('price', 'Цена'), ('description', 'Описание')], verbose_name='Причины отклонения')),
                ('floors_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checkerboard_app.floor')),
            ],
        ),
        migrations.CreateModel(
            name='Corp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.DecimalField(decimal_places=0, max_digits=3, verbose_name='Корпус номер')),
            ],
        ),
        migrations.CreateModel(
            name='Infrastructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=64, verbose_name='Адрес')),
                ('status', models.CharField(choices=[('apart', 'Квартира'), ('house', 'Дом')], default='apart', verbose_name='Статус')),
                ('view', models.CharField(choices=[('multifamily', 'многоквартирный'), ('singlefamily', 'одноквартирный')], default='singlefamily', verbose_name='Тип')),
                ('technology', models.CharField(choices=[('panel', 'Панельный'), ('monolith', 'Монолит')], default='panel', verbose_name='Технология')),
                ('territory', models.CharField(choices=[('close', 'Закрытая'), ('open', 'Открытая')], default='close', verbose_name='Территория')),
                ('distance', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Дистанция')),
                ('celling_height', models.DecimalField(decimal_places=0, max_digits=1, verbose_name='Высота потолков')),
                ('electricity', models.CharField(choices=[('yes', 'Подключено'), ('not', 'Отключено')], default='yes', verbose_name='Электричество')),
                ('gas', models.CharField(choices=[('yes', 'Есть'), ('not', 'Нет')], default='yes', verbose_name='Газ')),
                ('heating', models.CharField(choices=[('central', 'Центрайльное'), ('individual', 'Индивидуальное')], default='central', verbose_name='Отопление')),
                ('sewage', models.CharField(choices=[('central', 'Центрайльное'), ('individual', 'Индивидуальное')], default='central', verbose_name='Каннализация')),
                ('watter_supply', models.CharField(choices=[('central', 'Центрайльное'), ('individual', 'Индивидуальное')], default='central', verbose_name='Водоснабжение')),
                ('map', models.TextField(blank=True, null=True, verbose_name='Карта')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.DecimalField(decimal_places=0, max_digits=3, verbose_name='Секция номер')),
                ('corp_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infrastructures_app.corp')),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=datetime.date.today, verbose_name='Дата')),
                ('news_description', models.TextField(max_length=600, verbose_name='')),
                ('infrastructure_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infrastructures_app.infrastructure')),
            ],
        ),
        migrations.CreateModel(
            name='ImageApart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='img/image/', verbose_name='')),
                ('apartment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infrastructures_app.apartment')),
            ],
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='img/image/', verbose_name='')),
                ('infrastructure_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infrastructures_app.infrastructure')),
            ],
        ),
        migrations.CreateModel(
            name='Docs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='file/docs/', verbose_name='Документы')),
                ('is_excel', models.BooleanField(default=False, verbose_name='Ексель')),
                ('infrastructure_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infrastructures_app.infrastructure')),
            ],
        ),
        migrations.AddField(
            model_name='corp',
            name='infrastructure_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infrastructures_app.infrastructure'),
        ),
        migrations.AddField(
            model_name='apartment',
            name='infrastructure_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infrastructures_app.infrastructure'),
        ),
        migrations.AddField(
            model_name='apartment',
            name='promotion',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='promotion_app.promotion'),
        ),
        migrations.AddField(
            model_name='apartment',
            name='riser_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checkerboard_app.riser'),
        ),
    ]